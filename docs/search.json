[
  {
    "objectID": "index.html#review-of-the-extract-transform",
    "href": "index.html#review-of-the-extract-transform",
    "title": "Initial Principles of Data Visualizations",
    "section": "Review of the Extract & Transform",
    "text": "Review of the Extract & Transform\n\n\n\n\n\n\nGet & Clean\n\n\n\n\n\nETV\n\nHow did we get this data?\n\nExtraction of Data:\nWe extracted data using the Spotify API and transformed it using various dplyr functions. Review Extraction and Transformation Process.\n\n\n\nHow did we clean this data?\n\nTransformation of Data:\n\nBind Rows: Combining all_tracks_df. See this section of the notes for more details.\nFilter Function: Filtering data in all_tracks_cleaned_df. Refer to this section of the notes for additional information.\nGroup By and Summarize: Demonstrating these processes with album_info_df and artist_overview_df. Further details can be found in this section of the notes.\n\n\n\n\n\nLet’s load the data\n\n# Load the data from the R data file\nload(\"music_data.rda\")\n\n\nstr(album_info_df)\n\nClasses 'tbl_df', 'tbl' and 'data.frame':   98 obs. of  6 variables:\n $ artist_name       : chr  \"The Beatles\" \"The Beatles\" \"The Beatles\" \"The Beatles\" ...\n $ album_name        : chr  \"A Hard Day's Night (Remastered)\" \"Abbey Road (Super Deluxe Edition)\" \"Beatles For Sale (Remastered)\" \"Get Back (Rooftop Performance)\" ...\n $ album_release_year: num  1964 2019 1964 2022 1965 ...\n $ energy            : num  0.634 0.376 0.604 0.555 0.608 ...\n $ valence           : num  0.797 0.431 0.802 0.613 0.783 ...\n $ Number_of_Songs   : int  7 14 6 5 9 22 45 7 4 50 ..."
  },
  {
    "objectID": "index.html#lets-load-the-data",
    "href": "index.html#lets-load-the-data",
    "title": "Initial Principles of Data Visualizations",
    "section": "Let’s load the data",
    "text": "Let’s load the data\n\n# Load the data from the R data file\nload(\"music_data.rda\")\n\n\nstr(album_info_df)\n\nClasses 'tbl_df', 'tbl' and 'data.frame':   98 obs. of  6 variables:\n $ artist_name       : chr  \"The Beatles\" \"The Beatles\" \"The Beatles\" \"The Beatles\" ...\n $ album_name        : chr  \"A Hard Day's Night (Remastered)\" \"Abbey Road (Super Deluxe Edition)\" \"Beatles For Sale (Remastered)\" \"Get Back (Rooftop Performance)\" ...\n $ album_release_year: num  1964 2019 1964 2022 1965 ...\n $ energy            : num  0.634 0.376 0.604 0.555 0.608 ...\n $ valence           : num  0.797 0.431 0.802 0.613 0.783 ...\n $ Number_of_Songs   : int  7 14 6 5 9 22 45 7 4 50 ..."
  },
  {
    "objectID": "index.html#introduction-to-the-package-ggplot2",
    "href": "index.html#introduction-to-the-package-ggplot2",
    "title": "Initial Principles of Data Visualizations",
    "section": "Introduction to the package ggplot2",
    "text": "Introduction to the package ggplot2\n\n\n\n\n\n\nggplot2\n\n\n\n\n\nIn this module, we will explore how to create visualizations using the ggplot2 package in R.\nWe’ll focus on understanding:\n\ngeoms: the different types of geometric objects\nSummary Statistics: The stat_summary function can calculate summary statistics (like mean, median, min, max, etc.) for each group of data\nGuides: the importance of labels and titles in making plots informative."
  },
  {
    "objectID": "index.html#lets-visualize-using-ggplot",
    "href": "index.html#lets-visualize-using-ggplot",
    "title": "Initial Principles of Data Visualizations",
    "section": "Lets visualize using ggplot",
    "text": "Lets visualize using ggplot\n\n\n\n\n\n\nThe power of ggplot2\n\n\n\n\n\n\nThe ggplot2 package in R is a powerful and flexible system for creating data visualizations.\nBuilt upon the principles of the Grammar of Graphics, it allows users to construct plots by layering components systematically.\nggplot2 is renowned for its ability to handle complex visualization tasks, offering a wide range of plot types and customization options.\n\n\nlibrary(ggplot2)\n\n\nggplot(data = album_info_df)\n\n\n\n\n\n\n\n\nNow that we have the data, …\nWe must specify the variable(s) that we are interested to create a visualization."
  },
  {
    "objectID": "index.html#principle-1-geoms",
    "href": "index.html#principle-1-geoms",
    "title": "Initial Principles of Data Visualizations",
    "section": "Principle 1: geoms",
    "text": "Principle 1: geoms\n\n\n\n\n\n\nImportance of Variables\n\n\n\n\n\n\nBut wait … we have to understand\n\n\nVariables\nTypically, I determine:\n\nWhat your question?\nHow many variables are in your question?\nWhat are the variable types? Strings or numeric.\n\nBased on this information we can then determine how we can represent that information in a visualization.\n\n\ngeoms in ggplot2\nDefinition: geoms (geometric objects) are the visual representations of data in ggplot2. Examples include points, lines, and bars.\nDepending on the type of data and the story we want to tell, we choose different geoms.\n\n\n\n\n\n\nInvestigating Count Data - geom_bar\n\n\n\n\n\n\nWhat your question?\n\nWhich group had the most albums?\n\nHow many variables are in your question?\n\n2\n\nWhat are the variable types? Strings or numeric.\n\nType of Data: One string variable (Artist) and one string variable (Album Name)\nFill out the code as I explain each element of the code\n\n\n# Bar plot to show the number of albums per artist\nggplot(data = album_counts_df, \n       mapping = aes(\n           x = reorder(artist_name, -album_count), \n           y = album_count\n           )\n       ) +\n    geom_bar(stat = \"identity\")\n\n\n\n\n\nSooo… Which group had the most albums?\n\n\n\n\n\n\n\n\n\n\n\nInvestigating Numeric Data - geom_boxplot\n\n\n\n\n\n\nWhat your question?\n\nWhich group’s albums had the highest energy levels?\n\nHow many variables are in your question?\n\n2\n\nWhat are the variable types? Strings or numeric.\n\nType of Data: One string variable (Artist) and one numeric variable (Energy)\nFill out the code as I explain each element of the code\n\nCode and Visualization\n\n# Box plot to show the distribution of energy levels per artist\nggplot(data = album_info_df, \n       mapping = aes(\n         x = artist_name, \n         y = energy, \n         fill = artist_name\n         )\n       ) +\n  geom_boxplot() \n\n\n\n\n\nSooo… Which group’s albums had the highest energy levels?\n\n\nYou can investigate more geoms here.\n\n\n\n\n\n\n\n\n\nQuestions\n\n\n\n\n\nQuestion 1:\nReplace the box plot with the violin plot using the geom_violin() function.\n\nggplot(data = album_info_df, \n       mapping = aes(\n         x = artist_name, \n         y = energy, \n         fill = artist_name\n         )\n       ) +\n  geom_violin()\n\n\n\n\n\nWhat do you notice about the violin plot?\nHow does it differ from the box plot?\n\nAnswer: The violin and box plot both show the distribution of energy levels per artist. However, the violin plot shows where the data is concentrated better."
  },
  {
    "objectID": "index.html#but-wait-we-have-to-understand",
    "href": "index.html#but-wait-we-have-to-understand",
    "title": "Initial Principles of Data Visualizations",
    "section": "But wait … we have to understand",
    "text": "But wait … we have to understand"
  },
  {
    "objectID": "index.html#variables",
    "href": "index.html#variables",
    "title": "Initial Principles of Data Visualizations",
    "section": "Variables",
    "text": "Variables\nTypically, I determine:\n\nWhat your question?\nHow many variables are in your question?\nWhat are the variable types? Strings or numeric.\n\nBased on this information we can then determine how we can represent that information in a visualization."
  },
  {
    "objectID": "index.html#geoms-in-ggplot2",
    "href": "index.html#geoms-in-ggplot2",
    "title": "Initial Principles of Data Visualizations",
    "section": "geoms in ggplot2",
    "text": "geoms in ggplot2\nDefinition: geoms (geometric objects) are the visual representations of data in ggplot2. Examples include points, lines, and bars.\nDepending on the type of data and the story we want to tell, we choose different geoms.\n\n\n\n\n\n\nInvestigating Count Data - geom_bar\n\n\n\n\n\n\nWhat your question?\n\nWhich group had the most albums?\n\nHow many variables are in your question?\n\n2\n\nWhat are the variable types? Strings or numeric.\n\nType of Data: One string variable (Artist) and one string variable (Album Name)\nFill out the code as I explain each element of the code\n\n\n# Bar plot to show the number of albums per artist\nggplot(data = album_counts_df, \n       mapping = aes(\n           x = reorder(artist_name, -album_count), \n           y = album_count\n           )\n       ) +\n    geom_bar(stat = \"identity\")\n\n\n\n\n\nSooo… Which group had the most albums?\n\n\n\n\n\n\n\n\n\n\n\nInvestigating Numeric Data - geom_boxplot\n\n\n\n\n\n\nWhat your question?\n\nWhich group’s albums had the highest energy levels?\n\nHow many variables are in your question?\n\n2\n\nWhat are the variable types? Strings or numeric.\n\nType of Data: One string variable (Artist) and one numeric variable (Energy)\nFill out the code as I explain each element of the code\n\nCode and Visualization\n\n# Box plot to show the distribution of energy levels per artist\nggplot(data = album_info_df, \n       mapping = aes(\n         x = artist_name, \n         y = energy, \n         fill = artist_name\n         )\n       ) +\n  geom_boxplot() \n\n\n\n\n\nSooo… Which group’s albums had the highest energy levels?\n\n\nYou can investigate more geoms here.\n\n\n\n\n\n\n\n\n\nQuestions\n\n\n\n\n\nQuestion 1:\nReplace the box plot with the violin plot using the geom_violin() function.\n\nggplot(data = album_info_df, \n       mapping = aes(\n         x = artist_name, \n         y = energy, \n         fill = artist_name\n         )\n       ) +\n  geom_violin()\n\n\n\n\n\nWhat do you notice about the violin plot?\nHow does it differ from the box plot?\n\nAnswer: The violin and box plot both show the distribution of energy levels per artist. However, the violin plot shows where the data is concentrated better."
  },
  {
    "objectID": "index.html#code-and-visualization",
    "href": "index.html#code-and-visualization",
    "title": "Initial Principles of Data Visualizations",
    "section": "Code and Visualization",
    "text": "Code and Visualization\n\n# Box plot to show the distribution of energy levels per artist\nggplot(data = album_info_df, \n       mapping = aes(\n         x = artist_name, \n         y = energy, \n         fill = artist_name\n         )\n       ) +\n  geom_boxplot() \n\n\n\n\n\nSooo… Which group’s albums had the highest energy levels?"
  },
  {
    "objectID": "index.html#question-1",
    "href": "index.html#question-1",
    "title": "Initial Principles of Data Visualizations",
    "section": "Question 1:",
    "text": "Question 1:\nReplace the box plot with the violin plot using the geom_violin() function.\n\nggplot(data = album_info_df, \n       mapping = aes(\n         x = artist_name, \n         y = energy, \n         fill = artist_name\n         )\n       ) +\n  geom_violin()\n\n\n\n\n\nWhat do you notice about the violin plot?\nHow does it differ from the box plot?\n\nAnswer: The violin and box plot both show the distribution of energy levels per artist. However, the violin plot shows where the data is concentrated better."
  },
  {
    "objectID": "index.html#principle-2-stats-within-ggplot",
    "href": "index.html#principle-2-stats-within-ggplot",
    "title": "Initial Principles of Data Visualizations",
    "section": "Principle 2: Stats within ggplot",
    "text": "Principle 2: Stats within ggplot\n\n\n\n\n\n\nNote\n\n\n\n\n\n\nDefinition: In ggplot2, stats are key elements that help summarize and represent data. They allow us to visualize the central tendency or the most typical value in the data.\n\n\nCode and Visualization\n\n# Enhanced Violin plot with summary statistics for energy levels per artist\n\nggplot(data = album_info_df, \n       mapping = aes(\n         x = artist_name, \n         y = energy, \n         fill = artist_name\n         )\n       ) +\n  geom_violin() +\n  stat_summary(\n    fun = mean\n    )\n\nWarning: Removed 3 rows containing missing values (`geom_segment()`).\n\n\n\n\n\n\n\n\n\n\n\n\nQuestions\n\n\n\n\n\nQuestion 2: Adding Summary Statistics to Geoms\n\nComplete the code to overlay text on the bars using geom_text(). Use the help() function to learn more about the geom_text() function.\n\n\nggplot(data = album_counts_df, \n       mapping = aes(\n           x = reorder(artist_name, -album_count), \n           y = album_count\n       )) +\n    geom_bar(stat = \"identity\") +\n    geom_text(mapping = aes(\n      label = album_count), \n              vjust = -0.5,  # Adjust text just above the bars\n              size = 3.5)    # Set text size\n\n\n\n\n\nHow many albums do The Monkees have? [Numeric]"
  },
  {
    "objectID": "index.html#question-2-adding-summary-statistics-to-geoms",
    "href": "index.html#question-2-adding-summary-statistics-to-geoms",
    "title": "Initial Principles of Data Visualizations",
    "section": "Question 2: Adding Summary Statistics to Geoms",
    "text": "Question 2: Adding Summary Statistics to Geoms\n\nComplete the code to overlay text on the bars using geom_text(). Use the help() function to learn more about the geom_text() function.\n\n\nggplot(data = album_counts_df, \n       mapping = aes(\n           x = reorder(artist_name, -album_count), \n           y = album_count\n       )) +\n    geom_bar(stat = \"identity\") +\n    geom_text(mapping = aes(\n      label = album_count), \n              vjust = -0.5,  # Adjust text just above the bars\n              size = 3.5)    # Set text size\n\n\n\n\n\nHow many albums do The Monkees have? [Numeric]"
  },
  {
    "objectID": "index.html#principle-3-guides---legends-and-annotations",
    "href": "index.html#principle-3-guides---legends-and-annotations",
    "title": "Initial Principles of Data Visualizations",
    "section": "Principle 3: Guides - Legends and Annotations",
    "text": "Principle 3: Guides - Legends and Annotations\n\n\n\n\n\n\nNote\n\n\n\n\n\n\nDefinition: In ggplot2, guides are critical elements that enhance the interpretability of a plot. They include:\nlegends\naxes labels\ntitles\nother annotations\n\nThese serve as navigational tools that provide context and improve readability.\nLets go back to the violin plot we created earlier and add some labels and titles to make it more informative.\n\nCode and Visualization\n\n# Example code for adding labels to a plot\nggplot(data = album_info_df, \n       mapping = aes(\n         x = artist_name, \n         y = energy, \n         fill = artist_name\n       )\n) +\n  geom_violin() +\n  stat_summary(fun = mean) +\n  labs(\n    title = \"Energy Levels by Artist\",\n    subtitle = \"Comparison using violin plots with mean energy levels\",\n    x = \"Artist Name\",\n    y = \"Energy Level\",\n    fill = \"Artist Group\"\n  )\n\nWarning: Removed 3 rows containing missing values (`geom_segment()`).\n\n\n\n\n\n\n\n\n\n\n\n\nQuestions\n\n\n\n\n\nQuestion 3: Enhancing Plots with Labels\nCreate a scatter plot using geom_point to explore the relationship between energy and valence of albums. Edit the code to include a title, axis labels, and a color legend that are appropriate for the data being visualized. Specifically, set the title to ‘Energy vs Valence: Exploring Album Characteristics’, the subtitle to ‘A scatter plot illustrating the relationship between energy and valence in albums’, the x-axis label to ‘Energy’, and the y-axis label to ‘Valence’.\n\n# Your code to add labels to a scatter plot goes here\nggplot(data = album_info_df , \n       mapping = aes(\n         x = energy, \n         y = valence\n         )\n       ) +\n  geom_point() +\n  labs(\n    title = \"Energy vs Valence: Exploring Album Characteristics\",\n    subtitle = \"A scatter plot illustrating the relationship between energy and valence in albums\",\n    x = \"Energy\",\n    y = \"Valence\"\n  )\n\n\n\n\nGo back and add labels (title, subtitle, x-axis label, y-axis label) to all the plots you created in this module. How does this change the way you interpret the plots?"
  },
  {
    "objectID": "index.html#code-and-visualization-2",
    "href": "index.html#code-and-visualization-2",
    "title": "Initial Principles of Data Visualizations",
    "section": "Code and Visualization",
    "text": "Code and Visualization\n\n# Example code for adding labels to a plot\nggplot(data = album_info_df, \n       mapping = aes(\n         x = artist_name, \n         y = energy, \n         fill = artist_name\n       )\n) +\n  geom_violin() +\n  stat_summary(fun = mean) +\n  labs(\n    title = \"Energy Levels by Artist\",\n    subtitle = \"Comparison using violin plots with mean energy levels\",\n    x = \"Artist Name\",\n    y = \"Energy Level\",\n    fill = \"Artist Group\"\n  )\n\nWarning: Removed 3 rows containing missing values (`geom_segment()`)."
  },
  {
    "objectID": "index.html#conclusion",
    "href": "index.html#conclusion",
    "title": "Initial Principles of Data Visualizations",
    "section": "Conclusion",
    "text": "Conclusion\n\n\n\n\n\n\nNote\n\n\n\n\n\nToday’s exploration of the ggplot2 package in R has taken us through the intricacies of Geoms, Stats, and Guides. We’ve utilized all_tracks_cleaned_df, album_info_df, and artist_overview_df to demonstrate the creation of compelling visualizations, from basic bar charts to insightful violin and scatter plots.\n\ngeoms showed the diverse ways data can be visually represented.\nStats added a layer of depth by integrating statistical summaries.\nGuides enhanced our plots with clear legends and annotations, making them informative and accessible."
  },
  {
    "objectID": "learning_objectives.html",
    "href": "learning_objectives.html",
    "title": "Learning Objectives",
    "section": "",
    "text": "ggplot: Layered Approach\n\n\nDescription: ggplot builds plots using a layered approach. Each layer adds a new element to the plot, making complex visualizations achievable through simple building blocks.\n\n\nGeom: Visual Representation\n\n\nDescription: Geoms (geometric objects) are the heart of a ggplot plot. They provide the visual representations of data.\nExamples:\nPoints for scatter plots\nBoxplots and Violin Plots for showing distributions and comparing groups\nBars for bar charts\n\n\nStat: Statistical Transformations\n\n\nDescription: Statistical transformations (Stats) process your data to create summaries or perform calculations.\nKey Concepts:\nCounting data points\nSummarizing datasets\n\n\nGuide: Annotations and Legends\n\n\nDescription: Guides include all the necessary annotations to make a plot readable and informative.\nElements:\nLegends to explain scales\nAxis labels for clarity\nTitle and subtitles for context"
  },
  {
    "objectID": "learning_objectives.html#learning-objectives",
    "href": "learning_objectives.html#learning-objectives",
    "title": "Learning Objectives",
    "section": "",
    "text": "ggplot: Layered Approach\n\n\nDescription: ggplot builds plots using a layered approach. Each layer adds a new element to the plot, making complex visualizations achievable through simple building blocks.\n\n\nGeom: Visual Representation\n\n\nDescription: Geoms (geometric objects) are the heart of a ggplot plot. They provide the visual representations of data.\nExamples:\nPoints for scatter plots\nBoxplots and Violin Plots for showing distributions and comparing groups\nBars for bar charts\n\n\nStat: Statistical Transformations\n\n\nDescription: Statistical transformations (Stats) process your data to create summaries or perform calculations.\nKey Concepts:\nCounting data points\nSummarizing datasets\n\n\nGuide: Annotations and Legends\n\n\nDescription: Guides include all the necessary annotations to make a plot readable and informative.\nElements:\nLegends to explain scales\nAxis labels for clarity\nTitle and subtitles for context"
  },
  {
    "objectID": "extract_transform.html",
    "href": "extract_transform.html",
    "title": "Data Extraction and Manipulation",
    "section": "",
    "text": "To facilitate the tasks you’ve outlined, we’ll use the spotifyr package in R. This package is a great tool for accessing Spotify’s Web API and can help us gather and manipulate data related to artists, albums, and tracks. Below, I’ll provide you with R code snippets for each of your tasks.\nBefore you begin, ensure that you have the spotifyr package installed and loaded, and that you have valid Spotify API credentials (Client ID and Client Secret). Replace \"xxxxxxxxxxxxxxxxxxxxx\" with your actual credentials."
  },
  {
    "objectID": "extract_transform.html#task-1-get-tracks-from-the-beatles-the-rolling-stones-and-the-monkees",
    "href": "extract_transform.html#task-1-get-tracks-from-the-beatles-the-rolling-stones-and-the-monkees",
    "title": "Data Extraction and Manipulation",
    "section": "Task 1: Get Tracks from The Beatles, The Rolling Stones, and The Monkees",
    "text": "Task 1: Get Tracks from The Beatles, The Rolling Stones, and The Monkees\n\n1. Load the spotifyr Library and Authenticate:\n\nlibrary(spotifyr)\nlibrary(tidyverse)\n\n\n# Load environment variables\nclient_id &lt;- Sys.getenv(\"SPOTIFY_CLIENT_ID\")\nclient_secret &lt;- Sys.getenv(\"SPOTIFY_CLIENT_SECRET\")\n\n# Authenticate using the loaded credentials\n# Authenticate using the credentials stored in environment variables\naccess_token &lt;- get_spotify_access_token()\n\n\n\n2. Get Data for Each Artist and Bind Rows:\n\nbeatles_tracks_df &lt;- get_artist_audio_features(\"The Beatles\")\nrolling_stones_tracks_df &lt;- get_artist_audio_features(\"The Rolling Stones\")\nmonkees_tracks_df &lt;- get_artist_audio_features(\"The Monkees\")\n\nall_tracks_df &lt;- bind_rows(beatles_tracks_df, rolling_stones_tracks_df, monkees_tracks_df)\n\n\n\n3. Filter Out Duplicates and Irrelevant Data:\nHere, you’ll need to decide what constitutes an irrelevant track. For simplicity, I’m removing duplicates based on track IDs.\n\nall_tracks_cleaned_df &lt;- all_tracks_df %&gt;% \n  mutate(simple_track_name = str_extract(track_name, \"^[^-]*\"),\n         album_age = 2024 - album_release_year) %&gt;% \n  arrange(simple_track_name, album_age) %&gt;%\n  distinct(simple_track_name, .keep_all = TRUE)"
  },
  {
    "objectID": "extract_transform.html#task-2-aggregate-information-based-on-album-and-artist",
    "href": "extract_transform.html#task-2-aggregate-information-based-on-album-and-artist",
    "title": "Data Extraction and Manipulation",
    "section": "Task 2: Aggregate Information Based on Album and Artist",
    "text": "Task 2: Aggregate Information Based on Album and Artist\n\n1. Group by Album and Artist:\nAggregate data to get Energy, Valence, Number of Songs per Album, and Album Year.\n\nalbum_info_df &lt;- all_tracks_cleaned_df %&gt;% \ngroup_by(artist_name, album_name, album_release_year) %&gt;%\nsummarise(energy = mean(energy),\nvalence = mean(valence),\nNumber_of_Songs = n(),\n.groups = 'drop')\n\n\n\n2. Create an Overall Data Frame for Each Artist:\nThis Data Frame will show the number of songs, number of albums, and other noteworthy variables for each artist.\n\nartist_overview &lt;- all_tracks_cleaned %&gt;% \ngroup_by(artist_name) %&gt;%\nsummarise(Number_of_Songs = n(),\nNumber_of_Albums = n_distinct(album_name),\nAverage_Energy = mean(energy),\nAverage_Valence = mean(valence),\n.groups = 'drop')\n\n\n\n3. Determine the number of albums\n\nalbum_counts_df &lt;- all_tracks_cleaned_df %&gt;%\n  group_by(artist_name) %&gt;%\n  summarise(album_count = n_distinct(album_name)) %&gt;%\n  arrange(desc(album_count))\n\nPlease note that this code is a general guide. The exact specifications, like what constitutes a duplicate or irrelevant track, may need to be adjusted based on your specific requirements and the structure of the data returned by the Spotify API. Additionally, be aware of any rate limits or restrictions imposed by the Spotify API.\n\nsave(album_counts_df, album_info_df, file = \"music_data.rda\")"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About Dr. Immanuel J. Williams",
    "section": "",
    "text": "1 Grand Avenue, San Luis Obispo, CA. 93407-0405\nEmail: imwillia@calpoly.edu\nPhone: (732) 207-7321\n\n\n\n\n\n\nPh.D. in Education\nFocus: Psychometrics & Statistics\nRutgers University, May 2017\nM.S. in Statistics\nFocus: Psychometrics\nRutgers University, January 2013\nB.S. in Mathematics\nFocus: Statistics\nThe University of Maryland, Baltimore County, May 2011\n\n\n\n\n\nVisiting Lecturer\nPurdue University 2023\nData Science\nLecturer\nCalifornia Polytechnic State University, 2018-Present\nCourses: Statistical Inference for Management I & II\nLecturer\nUniversity California Santa Cruz, 2017-2018\nCourses: Statistical Methods For The Biological, Environmental, And Health Sciences, Gambling, And Gaming, & The Art of Data Visualization\nLecturer\nCalifornia State University Monterey Bay, 2015-2017\nCourses: Pre-calculus, Calculus II, & Applied Statistics\n\n\n\n\n\nWeiland, T., & Williams, I. J., (2023). Culturally Relevant Data in Teaching Statistics and Data Science Courses. Journal of Statistics and Data Science Education, 1-16.\nSisso, D., Bass, N., & Williams, I. J., (2023). Teaching One‐Way ANOVA with engaging NBA data and R Shiny within a flexdashboard. Teaching Statistics.\nDeLiema D., Flood V. J., Dahn M., Williams, I. J., Abrahamson D., Enyedy N., & Steen F. (2022). Debugging Failure: A Multi-dimensional Framework for Documenting Newcomers’ Experiences with Obstacles. Cognition and Instruction\nLanger-Osuna J. M., Munson J., Gargroetzi E. C., Williams, I. J., Chavez R. (2020) So What Are We Working On? Examining Student Authority Relations During Collaborative Mathematics Activity in a Fourth Grade Classroom. Educational Studies in Mathematics\nBattey, D., Leyva L. A., Williams, I. J., Belizario, V., Greco, R., Shah, R. (2019). Racial (Mis)Match in Middle School Mathematics Classrooms: Relational Interactions as a Racialized Mechanism. Harvard Educational Review, 89(1)"
  },
  {
    "objectID": "about.html#lecturer",
    "href": "about.html#lecturer",
    "title": "About Dr. Immanuel J. Williams",
    "section": "",
    "text": "1 Grand Avenue, San Luis Obispo, CA. 93407-0405\nEmail: imwillia@calpoly.edu\nPhone: (732) 207-7321"
  },
  {
    "objectID": "about.html#education",
    "href": "about.html#education",
    "title": "About Dr. Immanuel J. Williams",
    "section": "",
    "text": "Ph.D. in Education\nFocus: Psychometrics & Statistics\nRutgers University, May 2017\nM.S. in Statistics\nFocus: Psychometrics\nRutgers University, January 2013\nB.S. in Mathematics\nFocus: Statistics\nThe University of Maryland, Baltimore County, May 2011"
  },
  {
    "objectID": "about.html#teaching-experience",
    "href": "about.html#teaching-experience",
    "title": "About Dr. Immanuel J. Williams",
    "section": "",
    "text": "Visiting Lecturer\nPurdue University 2023\nData Science\nLecturer\nCalifornia Polytechnic State University, 2018-Present\nCourses: Statistical Inference for Management I & II\nLecturer\nUniversity California Santa Cruz, 2017-2018\nCourses: Statistical Methods For The Biological, Environmental, And Health Sciences, Gambling, And Gaming, & The Art of Data Visualization\nLecturer\nCalifornia State University Monterey Bay, 2015-2017\nCourses: Pre-calculus, Calculus II, & Applied Statistics"
  },
  {
    "objectID": "about.html#publications",
    "href": "about.html#publications",
    "title": "About Dr. Immanuel J. Williams",
    "section": "",
    "text": "Weiland, T., & Williams, I. J., (2023). Culturally Relevant Data in Teaching Statistics and Data Science Courses. Journal of Statistics and Data Science Education, 1-16.\nSisso, D., Bass, N., & Williams, I. J., (2023). Teaching One‐Way ANOVA with engaging NBA data and R Shiny within a flexdashboard. Teaching Statistics.\nDeLiema D., Flood V. J., Dahn M., Williams, I. J., Abrahamson D., Enyedy N., & Steen F. (2022). Debugging Failure: A Multi-dimensional Framework for Documenting Newcomers’ Experiences with Obstacles. Cognition and Instruction\nLanger-Osuna J. M., Munson J., Gargroetzi E. C., Williams, I. J., Chavez R. (2020) So What Are We Working On? Examining Student Authority Relations During Collaborative Mathematics Activity in a Fourth Grade Classroom. Educational Studies in Mathematics\nBattey, D., Leyva L. A., Williams, I. J., Belizario, V., Greco, R., Shah, R. (2019). Racial (Mis)Match in Middle School Mathematics Classrooms: Relational Interactions as a Racialized Mechanism. Harvard Educational Review, 89(1)"
  }
]